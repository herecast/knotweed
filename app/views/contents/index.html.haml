= @shared_conditions

.row-fluid
  .span12.box.bordered-box.blue-border
    .box-header.blue-background
      .title
        %i.icon-search
        Find Contents
      .actions
        %a.btn.box-remove.btn-mini.btn-link{ href: "#" }
          %i.icon-remove
        %a.btn.box-collapse.btn-mini.btn-link{ href: "#" }
          %i
    .box-content
      = search_form_for @search, url: contents_path do |f|
        .controls.controls-row
          .field.span2
            = f.label :id_in, "ID"
            -# format id_in val for display so it matches what's entered
            - if session[:contents_search].present? and session[:contents_search].has_key? :id_in and session[:contents_search][:id_in].present?
              - id_in_val = session[:contents_search][:id_in].join(',')
            - else
              - id_in_val = ""
            = f.text_field :id_in, value: id_in_val, class: "span12"
          .field.span2
            = f.label :source_id_in, "Publications"
            = f.collection_select :source_id_in, Publication.accessible_by(current_ability), 
              :id, :name, {}, { multiple: true, class: "chosen-select span12" }
          .field.span2
            = f.label :pubdate_gteq, "From"
            = f.text_field :pubdate_gteq, type: :date, value: search_field_value(:pubdate_gteq), class: "span12"
          .field.span2
            = f.label :pubdate_lteq, "To"
            = f.text_field :pubdate_lteq, type: :date, value: search_field_value(:pubdate_lteq), class: "span12"
          .field.span2
            = f.label :content_category_id_in, "Category"
            = f.collection_select :content_category_id_in, ContentCategory.accessible_by(current_ability),
              :id, :label, { include_blank: true },
              { multiple: true, class: "chosen-select span12" }
        .controls.controls-row
          .field.span2
            = f.label :title_cont, "Title"
            = f.text_field :title_cont, class: "span12"
          .field.span2
            = f.label :authors_cont, "Authors"
            = f.text_field :authors_cont, class: "span12"
          .field.span2
            = f.label :repositories_id_eq, "Published in Repository?"
            = f.collection_select :repositories_id_eq, Repository.all, :id, :name, { include_blank: true }, class: "span12"
          .field.span2
            = f.label :has_event_calendar_true, "Event Cal"
            = f.select :has_event_calendar_true, options_for_select([["Both", nil], ["Yes", 1], ["No", 0]], search_field_value(:has_event_calendar_true)),
              { class: "span12"}
        .form-actions
          = f.submit "Search", class: "btn btn-primary"
          = f.submit "Reset", name: "reset", class: "btn"
%table.table.table-striped.table-hover.table-condensed#contents_index
  %thead
    %tr
      %th Category
      %th Source
      %th Title
      %th Authors
      %th Location
      %th Pubdate
      %th Event?
      %th
  .span5
    = page_entries_info @contents if @contents.present?
    = paginate @contents, window: 2 if @contents.present?
  %tbody
    - @contents.each_with_index do |c, i|
      %tr{ class: "content-#{c.id}" }
        %td= c.category.try(:titlecase)
        %td
          - if c.source.present?
            = link_to c.source.name, contents_path(q: { source_id_in: c.source.id })
        %td= link_to c.title, edit_content_path(id: c.id, index: i, page: params[:page])
        %td
          - if c.authors.present?
            = link_to c.authors, contents_path(q: { authors_cont: c.authors })
        %td
          - if c.import_location.present?
            = link_to c.import_location.city, contents_path(q: { import_location_id_in: c.import_location.id })
        %td= c.pubdate.try(:strftime, "%Y-%m-%d")
        %td
          - if c.start_date.present? or c.has_event_calendar
            %i.glyphicons.icon-ok
        %td.actions
          = link_to "edit", edit_content_path(c), class: "btn btn-mini btn-warning"
          - unless c.published?
            = link_to "delete", content_path(c), method: :delete, remote: true, confirm: "Are you sure?", class: "btn btn-mini btn-danger"
