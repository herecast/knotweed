= simple_form_for [:admin, @content], html: { class: "form" } do |f|
  = f.error_notification
  .tabbable
    %ul.nav.nav-tabs.nav-tabs-simple#edit_doctabs
      %li.active
        = link_to "#", class: 'green-border', data: { toggle: "tab", target: "#features" } do
          %i.icon-info
          Features
      %li
        = link_to "#", class: "green-border", data: { toggle: "tab", target: "#doc_content" } do
          %i.icon-reorder
          Content
      %li
        = link_to "#", class: "green-border", data: { toggle: "tab", target: "#images" } do
          %i.icon-reorder
          Images
      - if @content.published
        %li
          = link_to "#", class: "green-border", data: { toggle: "tab", target: "#annotation_reports" } do
            Annotation Reports
    .tab-content
      .tab-pane.active.form-horizontal#features
        = f.input :title, input_html: { class: "input-block-level" }
        = f.input :subtitle, input_html: { class: "input-block-level" }
        = f.input :authors, input_html: { class: "input-block-level" }
        .row-fluid
          = f.association :source, input_html: { class: "select2 span12" }, wrapper_html: { class: "span6" }, label: "Publication"
          = f.input :copyright, input_html: { class: "span12" }, wrapper_html: { class: "span6" }
        .row-fluid
          = f.input :pubdate, as: :datetime_picker, wrapper_html: { class: "span6" }
          = f.input :timestamp, disabled: true, as: :string, wrapper_html: { class: "span6" }
        = f.input :categories, input_html: { class: "input-block-level" }
        = f.input :url, input_html: { class: "input-block-level" }
      .tab-pane#doc_content
        = f.input :content, input_html: { class: "ckeditor input-block-level" }
      .tab-pane#images
        = fields_for Image.new do |i|
          %fieldset#image_fields
            = file_field_tag :image, title: "Add Images +", data: { upload_url: admin_images_path }, multiple: true, name: "image[image]", id: "image_image"
            = label_tag "or just drag & drop here"
            / if content exists, submit a hidden content id field as well
            - if @content.id
              = i.hidden_field :imageable_type, value: @content.class.to_s
              = i.hidden_field :imageable_id, value: @content.id
            - else
              = f.association :images, as: :hidden, input_html: { name: "content[image_list]", value: "" }
        %script{ id: "template-upload", type: "text/x-tmpl" }
          .upload
            {%=o.name%}
            .progress
              .bar{ style: "width: 0%" }
        .row-fluid#image_list
          = render @content.images
      - if @content.published == true
        .tab-pane#annotation_reports
          .pull-left
            .span4
              = link_to "+ Create New", "#", class: "btn btn-success", data: { toggle: "modal", target: "#annotations", action_url: admin_create_annotation_report_path(@content.id) }, id: "create-annotation-report"
            .field.span5
              = label_tag :report_name, "Name"
              = text_field_tag :report_name
          %table.table.table-striped.table-condensed
            %thead
              %tr
                %th Name
                %th Description
                %th Created At
            %tbody
              - @content.annotation_reports.each do |ar|
                %tr
                  -#%td= link_to ar.name, "#", class: "edit-annotation-report-link", data: { toggle: "modal", target: "#annotations", action_url: edit_admin_annotation_report_path(ar) }
                  %td= ar.name
                  %td= ar.description
                  %td= ar.created_at
    .form-actions
      = submit_tag nil, class: "btn btn-primary"
      = link_to "Cancel", :back, class: "btn"

.modal.hide.fade#annotations
  .modal-header
    %button.close{ type: "button", data: { dismiss: "modal" } } x
    %h3#annotation_report_name
  #annotation_form
  .modal-body
    Loading annotations...

.baloon{style: "display: none;"}
