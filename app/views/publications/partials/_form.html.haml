= simple_form_for @publication, html: { class: "form" } do |f|

  = f.error_notification
  .tabbable
    %ul.nav.nav-tabs.nav-tabs-simple#edit_pubtabs
      %li.active
        = link_to "#", class: "green-border", data: { toggle: "tab", target: "#details" } do
          Details
      %li
        = link_to '#', class: "green-border", data: { toggle: "tab", target: "#business_locations" } do
          Locations
      %li
        = link_to "#", class: "green-border", data: { toggle: "tab", target: "#images" } do
          Images
      %li
        = link_to "#", class: "green-border", data: { toggle: "tab", target: "#contacts" } do
          Contacts
      %li
        = link_to "#", class: "green-border", data: { toggle: "tab", target: "#locations" } do
          Service Areas
      %li
        = link_to "#", class: "green-border", data: { toggle: "tab", target: "#properties" } do 
          Links
      - if @publication.id
        %li
          = link_to "#", class: "green-border", data: { toggle: "tab", target: "#issues" } do
            Issues
        %li
          = link_to "#", class: "green-border", data: { toggle: "tab", target: "#history" } do
            History
        %li
          = link_to "#", class: "green-border", data: { toggle: "tab", target: "#promotions" } do
            Promotions
    .tab-content
      .tab-pane.active.form-horizontal#details
        = f.input :name, input_html: { class: "span5" }
        = f.input :tagline, as: :string, input_html: { class: "span5" }
        = f.input :pub_type, collection: Publication::PUB_TYPE_OPTIONS, label: "Publication Type"
        = f.association :organization, input_html: { class: "span5 select2" }
        = f.association :parent, collection: Publication.parent_pubs, label: "Parent Publication (Syndication)", input_html: { class: "span5 select2" }, include_blank: true
        = f.input :category_override, input_html: { class: "span5" }, hint: "Set this option to force all content to publish with a specific category."
        = f.input :publishing_frequency, collection: Publication::FREQUENCY_OPTIONS, input_html: { class: "span5" }
        = f.input :website, input_html: { class: "span5" }
        = f.input :reverse_publish_email, input_html: { class: "span5" }
        = f.input :display_attributes
        = f.input :notes, input_html: { class: "span5", rows: 10 } 
      .tab-pane#properties
        .row-fluid
          %span.pull-left.btn.btn-success.add-new-field-link{ data: { field_type: "links", model: "content" } } + Add New Link
          = text_field_tag "new_link_field", nil, class: "new-serialized-field span3"
        = f.fields_for :links do |g|
          .row-fluid.serialized-field-header
            .span2= label_tag "Label"
            .span3= label_tag "Value"
          - @publication.links.each_pair do |k,v|
            .row-fluid.serialized-field-row
              .span2= label_tag k
              .span6= g.text_field "#{k}", value: v, class: "span12"
              .span2
                .btn.btn-danger.remove-serialized-field X
      .tab-pane#business_locations
        .pull-right
          = link_to "+ Add New Location", "#", class: "btn btn-success", data: { toggle: "modal", target: "#business_location_form", form_url: new_business_location_path({ publication_id: @publication.id }  )}, id: "new_business_location_button" 
          / hidden field for creating business locations associated with a new publication record
          - unless @publication.id
            = f.association :business_locations, as: :hidden, input_html: { name: "publication[business_location_list]", value: "" }
        %table.table.table-striped.table-condensed.sortable#business_locations_table
          %thead
            %tr
              %th ID
              %th Name
              %th Address
              %th Phone
              %th Email
              %th Hours
              %th
          %tbody#business_locations_list
            - @publication.business_locations.each do |loc|
              = render "business_locations/partials/row", business_location: loc
      
      .tab-pane#images
        = label_tag "Logo"
        = image_tag(@publication.logo.url) if @publication.logo?
        - if @publication.logo?
          = f.input :remove_logo, as: :boolean, label: "Remove logo?"
        .row-fluid
          .span1
            = f.input :logo, label: false
          .span3.form-horizontal
            = f.input :remote_logo_url, label: "OR Upload from URL:"
        %hr
        .row-fluid
          = label_tag "Header"
          = image_tag @publication.header.url if @publication.header?
          - if @publication.header?
            = f.input :remove_header, as: :boolean, label: "Remove header?"
          = f.input :header, as: :file, label: false
      .tab-pane#contacts
        .pull-right
          = link_to "+ Add New Contact", "#", class: "btn btn-success", data: { toggle: "modal", target: "#contact_form", form_url: new_contact_path(Publication, @publication.id) }, id: "new_contact_button"
          / hidden field for creating contacts associated with a new publication record
          - unless @publication.id
            = f.association :contacts, as: :hidden, input_html: { name: "publication[contact_list]" , value: "" }
        %table.table.table-striped.table-condensed.sortable#contacts_table
          %thead
            %tr
              %th ID
              %th Type
              %th Name
              %th Phone
              %th Email
              %th Notes
              %th
          %tbody#contact_list
            - @publication.contacts.each do |contact|
              = render "contacts/contact_row", contact: contact
      .tab-pane#locations
        .row-fluid
          .span8
            = text_field_tag :search_locations, nil, class: "span12", placeholder: "search available locations"
          .span4
            = link_to "+ Add New Location", "#", class: "btn btn-success", data: { toggle: "modal", target: "#location_form", form_url: new_location_path }, id: "new_location_button"
          .row-fluid
            .span8
              = f.association :locations, label: false, input_html: { class: "locations-select multi-select" }
          .row-fluid
            .span2.offset2.text-right
              = link_to "select all", "#", id: "select-all-locs"
            .span2.text-left
              = link_to "deselect all", "#", id: "deselect-all-locs"
      - if @publication.id
        .tab-pane#issues
          .pull-right
            = link_to "+ Add New Issue", "#", class: "btn btn-success", data: { toggle: "modal", target: "#issue_form", form_url: new_issue_path({publication_id: @publication.id}) }, id: "new_issue_button"
          %table.table.table-striped.table-condensed.sortable#issues_table
            %thead
              %tr
                %th ID
                %th Edition
                %th Copyright
                %th Publication Date
                %th
            %tbody#issue_list
              - @publication.issues.each do |issue|
                = render "issues/issue_row", issue: issue
        .tab-pane#history
          histry
        .tab-pane#promotions
          = render "promotions/partials/promotions_tab", publication: @publication
          
      .form-actions
        = submit_tag "Submit and Create New Content Set", class: "btn btn-success", name: "add_content_set"
        = submit_tag nil, class: "btn btn-primary"
        = link_to "Cancel", :back, class: "btn"

.modal.hide.fade#contact_form
  .modal-header
    %button.close{ type: "button", data: { dismiss: "modal" } } x
    %h3 Publication Contact
  .modal-body
    Loading...


.modal.hide.fade#issue_form
  .modal-header
    %button.close{ type: "button", data: { dismiss: "modal" } } x
    %h3 Issue
  .modal-body
    Loading...

.modal.hide.fade#location_form
  .modal-header
    %button.close{ type: "button", data: { dismiss: "modal" } } x
    %h3 Location
  .modal-body
    Loading...

.modal.hide.fade#business_location_form
  .modal-header
    %button.close{ type: "button", data: { dismiss: "modal" } } x
    %h3 Business Location
  .modal-body
    Loading...   
